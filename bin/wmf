#!/bin/sh

. ~/.config/wmrc/config

usage() {
    echo "usage: $(basename $0) <next|prev|left|right|up|down|wid>" >&2
    exit 1
}

setb() {
    wattr $2 || return
    wattr o $2 && return

    [ "$(wattr xywh $2)" = "$(wattr xywh $ROOT)" ] && return

    case $1 in
        active) chwb -s $BW -c $ACTIVE $2 ;;
        inactive) chwb -s $BW -c $INACTIVE $2 ;;
    esac
}

closest() {
    x1=$(wattr $1 $PFW)
    y1=$(wattr $2 $PFW)
    d=$3
    for wid in $(lsw | grep -v $PFW); do
        x2=$(wattr $1 $wid)
        y2=$(wattr $2 $wid)
        if [ $(((x2 - x1) * d)) -gt 0 ]; then
            dist=$(((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)))
            echo $dist $wid
        fi
    done
}

case $1 in
    next)  wid=$(lsw | grep -v $CUR | sed '1 p;d') ;;
    prev)  wid=$(lsw | grep -v $CUR | sed '$ p;d') ;;
    left)  wid=$(closest x y -1 | sort -n | head -n1 | cut -d' ' -f2) ;;
    right) wid=$(closest x y 1 | sort -n | head -n1 | cut -d' ' -f2) ;;
    up)    wid=$(closest y x -1 | sort -n | head -n1 | cut -d' ' -f2) ;;
    down)  wid=$(closest y x 1 | sort -n | head -n1 | cut -d' ' -f2) ;;
    0x*)   wattr $1 && wid=$1 ;;
    *)     usage ;;
esac

[ -z "$wid" ] && { echo "$(basename $0): no window to focus" >&2; exit 1; }

chwso -r $wid
wtf $wid
setb active $wid
[ $wid != $CUR ] && setb inactive $CUR
