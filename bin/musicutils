#! /usr/bin/python2
import mutagen
import mutagen.mp3
import mutagen.apev2
import os.path

import sys
import argparse

parser = argparse.ArgumentParser(description='Various music tagging tools')
parser.add_argument('-q', '--query', action='store_true', dest='query', help='query tags')
parser.add_argument('-c', '--clear', action='store_true', dest='clear', help='delete all tags except artist, album, title, date, tracknumber')
parser.add_argument('-d', '--delete', action='store_true', dest='delete', help='delete all tags')
parser.add_argument('-r', '--rename', action='store_true', dest='rename', help='rename files from tags')
parser.add_argument('-g', '--guess', action='store_true', dest='guess', help='quess tags from path')
parser.add_argument('-f', '--force', action='store_true', dest='force', help='force file write for rename and guess operations')
if len(sys.argv)==1:
    parser.print_help()
    sys.exit(1)
args=parser.parse_args()

def isMusic(str):
    ext = os.path.splitext(str)[1]
    return ext == '.mp3' or ext == '.flac' or ext == '.m4a'

if args.query:
    sys.stdout.write('\nQuery tag info...\n\n')
    for fn in os.listdir('.'):
        if isMusic(fn):
            f = mutagen.File(fn, easy=True)
            sys.stdout.write(fn + '\n')
            sys.stdout.write(f.pprint() + '\n\n')
    sys.stdout.write('Done!\n')
elif args.clear or args.delete:
    sys.stdout.write('\nDeleting APEv2 tags...\n\n')
    for fn in os.listdir('.'):
        if isMusic(fn):
            sys.stdout.write(fn + '\n')
            try:
                mutagen.apev2.delete(fn)
            except:
                pass
    sys.stdout.write('\nDeleting ID3 tags...\n\n')
    for fn in os.listdir('.'):
        if isMusic(fn):
            sys.stdout.write(fn + '\n')
            f = mutagen.File(fn, easy=True)
            if args.clear:
                artist = f['artist'][0]
                album = f['album'][0]
                date = f['date'][0]
                title = f['title'][0]
                tracknumber = f['tracknumber'][0].split('/')[0]
            f.delete()
            if args.clear:
                f['artist'] = artist
                f['album'] = album
                f['date'] = date
                f['tracknumber'] = tracknumber
                f['title'] = title
            f.save()
    sys.stdout.write('Done!\n')
elif args.rename:
    sys.stdout.write('\nRenaming files...\n\n')
    for fn in os.listdir('.'):
        if isMusic(fn):
            f = mutagen.File(fn, easy=True)
            ext = os.path.splitext(fn)[1]
            title = f['title'][0]
            tracknumber = f['tracknumber'][0].zfill(2)
            sys.stdout.write(tracknumber + ' ' + title.replace("/", "_") + ext + '\n')
            if args.force:
                os.rename(fn,  tracknumber + ' ' + title.replace("/", "_") + ext)
    sys.stdout.write('Done!\n')
elif args.guess:
    sys.stdout.write('\nGuessing tags...\n\n')
    dir = os.getcwd()
    for fn in os.listdir('.'):
        if isMusic(fn):
            artist = os.path.basename(os.path.dirname(dir))
            if ' ' in os.path.basename(dir) and ' ' in fn:
                album = os.path.basename(dir).split(' ', 1)[1]
                date = os.path.basename(dir).split(' ', 1)[0]
                tracknumber = fn.split(' ', 1)[0].lstrip('0')
                title = os.path.splitext(fn)[0].split(' ', 1)[1]
            else:
                album = os.path.basename(dir)
                date = ''
                tracknumber = ''
                title = os.path.splitext(fn)[0]
            sys.stdout.write(fn + '\n')
            sys.stdout.write('Artist: ' + artist + '\n')
            sys.stdout.write('Album: ' + album + '\n')
            sys.stdout.write('Date: ' + date + '\n')
            sys.stdout.write('Title: ' + title + '\n')
            sys.stdout.write('Tracknumber: ' + tracknumber + '\n')
            sys.stdout.write('\n')
            if args.force:
                f = mutagen.File(fn, easy=True)
                f['artist'] = unicode(artist, 'utf-8')
                f['album'] = unicode(album, 'utf-8')
                f['date'] = unicode(date, 'utf-8')
                f['tracknumber'] = unicode(tracknumber, 'utf-8')
                f['title'] = unicode(title, 'utf-8')
                f.save()
