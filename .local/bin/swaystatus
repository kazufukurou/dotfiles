#!/usr/bin/python

import sys
import time
import json
import i3ipc
import signal
import threading
import subprocess

def on_window_focus(ipc, event):
    global prev_focused
    global prev_workspace
    global opacity

    focused = event.container
    workspace = ipc.get_tree().find_focused().workspace().num

    if focused.id != prev_focused.id:  # https://github.com/swaywm/sway/issues/2859
        focused.command("opacity 1")
        if workspace == prev_workspace:
            prev_focused.command("opacity " + opacity)
        prev_focused = focused
        prev_workspace = workspace

def remove_opacity(ipc):
    for workspace in ipc.get_tree().workspaces():
        for w in workspace:
            w.command("opacity 1")
    ipc.main_quit()
    sys.exit(0)

def print_status(text, highlight):
    color = color1 if highlight else color2
    print("{\"full_text\":%s,\"color\":\"#%s\"}," %(json.dumps(text), color), flush = True)

if __name__ == "__main__":
    ipc = i3ipc.Connection()
    color1 = sys.argv[1]
    color2 = sys.argv[2]
    opacity = sys.argv[3]
    prev_focused = None
    prev_workspace = ipc.get_tree().find_focused().workspace().num

    for window in ipc.get_tree():
        if window.focused:
            prev_focused = window
        else:
            window.command("opacity " + opacity)
    for sig in [signal.SIGINT, signal.SIGTERM]:
        signal.signal(sig, lambda signal, frame: remove_opacity(ipc))
    ipc.on("window::focus", on_window_focus)
    t = threading.Thread(target=ipc.main)
    t.start()

    print("{\"version\":1}")
    print("[[],")
    while True:
        try:
            volume_level = subprocess.check_output(["pulsemixer", "--get-volume"]).decode("utf-8").split()[-1]
            volume_muted = subprocess.check_output(["pulsemixer", "--get-mute"]).decode("utf-8").split()[-1]
        except:
            volume_level = "0"
            volume_muted = "0"
        print("[")
        print_status(prev_focused.name, False)
        print_status(" ", False)
        print_status("V", False)
        print_status(volume_level, volume_muted == "0")
        print_status(" ", False)
        print_status(time.strftime("%b"), False)
        print_status(time.strftime("%d"), True)
        print_status(time.strftime("%a"), False)
        print_status(time.strftime("%R"), True)
        print("],")
        time.sleep(1)
