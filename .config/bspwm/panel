#! /bin/bash

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

workspaces=('▀ ' '▀▀' ' ▀' '█ ' '██' ' █' '▄ ' '▄▄' ' ▄' '▄▀')
fw=$(tput bold)$(tput setaf 7)
fb=$(tput bold)$(tput setaf 4)
fm=$(tput bold)$(tput setaf 5)
fr=$(tput bold)$(tput setaf 1)
blink=$(tput blink)
c=$(tput sgr0)

cpu() {
    cpus=$(grep -c processor /proc/cpuinfo)
    echo $(ps -eo pcpu | awk -v "cpus=$cpus" '/\s*[1-9]/ NR==1 {sum=0} {sum+=$1} END {printf "%d\n", sum/cpus}')
}

temp() {
    echo $((`cat /sys/class/thermal/thermal_zone0/temp`/1000))
}

temp_color() {
    [ $1 -gt 80 ] && echo $fr || [ $1 -gt 60 ] && echo $fm || echo $fb
}

volume() {
    [ -n "$(amixer get Master | grep off)" ] && echo Mute || echo $(amixer get Master | tail -1 | cut -d ' ' -f6 | tr -d '[%]')
}

volume_color() {
    [ "Mute" = $1 ] && echo $fr || echo $fw
}

battery() {
    battery=$(cat /sys/class/power_supply/BAT0/capacity)
    [ -z $battery ] && echo 0 || echo $battery
}

battery_status() {
    echo $(cat /sys/class/power_supply/BAT0/status)
}

battery_color() {
    [ $1 -le 10 ] && [ "$2" = "Discharging" ] && echo $fr$blink && return 0
    [ $1 -le 10 ] && echo $fr && return 0
    [ $1 -le 50 ] && echo $fm && return 0
    [ $1 -le 90 ] && echo $fb && return 0
    echo $fw
}

cmus() {
    info=$(cmus-remote -Q | grep tag)
    title=$(echo -e "$info" | grep 'tag title' | cut -d ' ' -f3-)
    artist=$(echo -e "$info" | grep 'tag artist' | cut -d ' ' -f3-)
    echo "$artist $fw$title$c"
}

print_left_right() {
    clean1=$(echo "$1" | sed -r "s/\x1B\[(\?)?([0-9]{1,3}((;[0-9]{1,3})*)?)?[lmgK](\x1B\(B)?//g")
    clean2=$(echo "$2" | sed -r "s/\x1B\[(\?)?([0-9]{1,3}((;[0-9]{1,3})*)?)?[lmgK](\x1B\(B)?//g")
    len1=$(echo "$1" | wc -L)
    len2=$(echo "$2" | wc -L)
    clean_len1=$(echo "$clean1" | wc -L)
    clean_len2=$(echo "$clean2" | wc -L)
    color1=$(($len1-$clean_len1))
    color2=$(($len2-$clean_len2))
    cols=$(($(tput cols)-$len1-$len2+$color1+$color2))
    printf "%s%${cols}s%s" "$1" "" "$2"
}

system_loop() {
    while true; do
        bspc desktop -f
        sleep 1
    done
}

panel_bar() {
    while read -r line ; do
        wm_name=$(bspc query -D -d focused)
        wm_icon=${workspaces[$wm_name]}
        node_id=$(bspc query -N -n focused)
        title=""
        [ -n "$node_id" ] && title=$(xprop -id $node_id WM_NAME | cut -d \" -f2)
        t=$(temp)
        v=$(volume)
        b=$(battery)
        bs=$(battery_status)
        dm=$(date +%b)
        dd=$(date +%e)
        ddt=${dd## }
        dw=$(date +%a)
        dt=$(date +%R)
        case "$status_color" in *$blink*) ;; esac
        tc=$(temp_color $t)
        vc=$(volume_color $v)
        bc=$(battery_color $b $bs)

        msg="$(tput civis)$fw$wm_icon$c $title"
        sta="T $tc$t$c V $vc$v$c B $bc$b$c $dm $fw$ddt$c $dw $fw$dt$c"
        print_left_right "$msg" "$sta"
    done
}

system_loop &
bspc subscribe desktop | panel_bar &
wait
