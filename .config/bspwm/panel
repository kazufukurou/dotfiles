#! /bin/sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

PANEL_FIFO=/tmp/panel-fifo
WORKSPACES="▀··,·▀·,··▀,█··,·█·,··█,▄··,·▄·,··▄,███"
cw=$(tput bold)$(tput setaf 7)
cm=$(tput bold)$(tput setaf 5)
cb=$(tput bold)$(tput setaf 4)
cr=$(tput bold)$(tput setaf 1)
c=$(tput sgr0)
#br=%{B$PANEL_COLOR_RED}
#b=%{B-}

cpu() {
    cpus=$(grep -c processor /proc/cpuinfo)
    ps -eo pcpu | awk -v "cpus=$cpus" '/\s*[1-9]/ NR==1 {sum=0} {sum+=$1} END {printf "%d\n", sum/cpus}'
}

temp() {
    echo $((`cat /sys/class/thermal/thermal_zone0/temp`/1000))
}

tempColor() {
    if [ $1 -gt 80 ]; then
        echo $cr
    elif [ $1 -gt 60 ]; then
        echo $cm
    else
        echo $cb
    fi
}

volume() {
    if [ -n "$(amixer get Master | grep off)" ]; then
       echo Mute
    else
       echo $(amixer get Master | tail -1 | cut -d ' ' -f6 | tr -d '[%]')
    fi
}

volumeColor() {
    if [ "Mute" = $1 ]; then echo $cr; else echo $cw; fi
}

battery() {
    battery=$(cat /sys/class/power_supply/BAT0/capacity)
    batteryText=$battery

    if [ -z $battery ]; then
        battery=-1
        batteryText=-
    fi
    echo $batteryText
}

batteryColor() {
    if [ $1 -gt 75 ]; then
        echo $cb
    elif [ $battery -gt 50 ]; then
        echo $cm
    elif [ $battery -gt 25 ]; then
        echo $cr
    elif [ $battery -gt -1 ]; then
        echo $crb
    else
        echo $cw
    fi
}

dateMonth() {
    echo $(date +%b)
}

dateDay() {
    echo $(date +%e)
}

dateWeekDay(){
    echo $(date +%a)
}

dateTime(){
    echo $(date +%R)
}

cmus() {
    info=$(cmus-remote -Q | grep tag)
    title=$(echo -e "$info" | grep 'tag title' | cut -d ' ' -f3-)
    artist=$(echo -e "$info" | grep 'tag artist' | cut -d ' ' -f3-)
    echo "$artist $cw$title$c"
}

system_loop() {
    while true; do
        echo "S"
        sleep 1
    done
}

alert() {
    battery=$(cat /sys/class/power_supply/BAT0/capacity)
    batteryStatus=$(cat /sys/class/power_supply/BAT0/status)

    if [ $battery -le 10 ]; then
        if [ "$batteryStatus" = "Discharging" ]; then
           echo " BATTERY "
        fi
    fi
}

panel_bar() {
    while read -r line ; do
        wmName=$(bspc query -D -d focused)
        wmIcon=$(echo $WORKSPACES | cut -d, -f$wmName)
        nodeId=$(bspc query -N -n focused)
        if [ -n "$nodeId" ]; then
            title=$(xprop -id $nodeId WM_NAME | cut -d \" -f2)
        else
            title=""
        fi
        if [ "$line" = "S" ]; then
            t=$(temp)
            v=$(volume)
            b=$(battery)
            dm=$(dateMonth)
            dd=$(dateDay)
            dw=$(dateWeekDay)
            dt=$(dateTime)
            tc=$(tempColor $t)
            vc=$(volumeColor $v)
            bc=$(batteryColor $b)
            statusColor="T $tc$t$c V $vc$v$c B $bc$b$c $dm $cw$dd$c $dw $cw$dt$c"
            statusClean="T $t V $v B $b $dm $dd $dw $dt"
        fi
        msgColor="$(tput clear)$(tput civis)$wmIcon $title"
        msgClean="$wmIcon $title"
        cols=$(($(tput cols)-${#msgClean}-${#statusClean}+${#statusColor}))
        printf "%s%${cols}s" "$msgColor" "$statusColor"
    done
}

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc subscribe desktop > "$PANEL_FIFO" &
system_loop > $PANEL_FIFO &

cat "$PANEL_FIFO" | panel_bar &
wait
