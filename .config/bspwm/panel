#! /bin/sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

. ~/.config/bspwm/panel_config

PANEL_FIFO=/tmp/panel-fifo
WORKSPACES="▘ ▀ ▝ ▌ █ ▐ ▖ ▄ ▗"
cw=%{F$PANEL_COLOR_WHITE}
cm=%{F$PANEL_COLOR_MAGENTA}
cb=%{F$PANEL_COLOR_BLUE}
cr=%{F$PANEL_COLOR_RED}
crb=%{F$PANEL_COLOR_RED_BOLD}
c=%{F-}
br=%{B$PANEL_COLOR_RED}
b=%{B-}

cpu() {
    cpus=$(grep -c processor /proc/cpuinfo)
    ps -eo pcpu | awk -v "cpus=$cpus" '/\s*[1-9]/ NR==1 {sum=0} {sum+=$1} END {printf "%d\n", sum/cpus}'
}

temp() {
    temperature=$((`cat /sys/class/thermal/thermal_zone0/temp`/1000))
    if [ $temperature -gt 80 ]; then
        color=$cr
    elif [ $temperature -gt 60 ]; then
        color=$cm
    else
        color=$cb
    fi
    echo "$color$temperature$c"
}

volume() {
    if [ -n "$(amixer get Master | grep off)" ]; then
       echo ${cr}Mute$c
    else
       echo $cw$(amixer get Master | tail -1 | cut -d ' ' -f6 | tr -d '[%]')$c
    fi
}

battery() {
    battery=$(cat /sys/class/power_supply/BAT0/capacity)
    batteryText=$battery

    if [ -z $battery ]; then
        battery=-1
        batteryText=-
    fi

    if [ $battery -gt 75 ]; then
        color=$cb
    elif [ $battery -gt 50 ]; then
        color=$cm
    elif [ $battery -gt 25 ]; then
        color=$cr
    elif [ $battery -gt -1 ]; then
        color=$crb
    else
        color=$cw
    fi

    echo "$color$batteryText$c"
}

datetime() {
    template="%b $cw%e$c %a $cw%R$c"
    echo $(date +"$template")
}

cmus() {
    info=$(cmus-remote -Q | grep tag)
    title=$(echo -e "$info" | grep 'tag title' | cut -d ' ' -f3-)
    artist=$(echo -e "$info" | grep 'tag artist' | cut -d ' ' -f3-)
    echo "$artist $cw$title$c"
}

title_loop() {
    while true; do
        id=$(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5)
        if [ "$id" = "0x0" ]; then
            echo "T-"
        else
            echo T$(xprop -id $id WM_NAME | cut -d \" -f2)
        fi
        sleep .5
    done
}

system_loop() {
    while true; do
        echo "S$(cmus) T $(temp) V $(volume) B $(battery) $(datetime)"
        sleep 1
    done
}

alert() {
    battery=$(cat /sys/class/power_supply/BAT0/capacity)
    batteryStatus=$(cat /sys/class/power_supply/BAT0/status)

    if [ $battery -le 10 ]; then
        if [ "$batteryStatus" = "Discharging" ]; then
            echo "%{T2}$br$cw BATTERY $c$b%{T-}"
        fi
    fi
}

panel_bar() {
    while read -r line ; do
        case $line in
            S*)
                sys_infos="${line#?}"
                ;;
            T*)
                title="${line#?}"
                ;;
            W*)
                wm_infos=""
                IFS=':'
                set -- ${line#?}
                while [ $# -gt 0 ] ; do
                    item=$1
                    case $item in
                        O*|F*|U*)
                            name=${item#?}
                            wm_name=$(echo $WORKSPACES | cut -d' ' -f${name})
                            wm_infos="${wm_infos}${wm_name}"
                            ;;
                    esac
                    shift
                done
                ;;
        esac
        printf "%s\n" "%%{l} $cw${wm_infos}$c ${title}%{c}$(alert)%{r}${sys_infos} "
    done
}

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc control --subscribe > "$PANEL_FIFO" &
title_loop > $PANEL_FIFO &
system_loop > $PANEL_FIFO &

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_1" -f "$PANEL_FONT_2" -F "$PANEL_COLOR_GRAY" -B "$PANEL_COLOR_BG" &
wait
