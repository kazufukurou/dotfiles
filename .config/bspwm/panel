#! /bin/bash

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

workspaces="▀··,·▀·,··▀,█··,·█·,··█,▄··,·▄·,··▄,███"
fw=$(tput bold)$(tput setaf 7)
fm=$(tput bold)$(tput setaf 5)
fb=$(tput bold)$(tput setaf 4)
fr=$(tput bold)$(tput setaf 1)
blink=$(tput blink)
c=$(tput sgr0)

cpu() {
    cpus=$(grep -c processor /proc/cpuinfo)
    echo $(ps -eo pcpu | awk -v "cpus=$cpus" '/\s*[1-9]/ NR==1 {sum=0} {sum+=$1} END {printf "%d\n", sum/cpus}')
}

temp() {
    echo $((`cat /sys/class/thermal/thermal_zone0/temp`/1000))
}

temp_color() {
    if [ $1 -gt 80 ]; then
        echo $fr
    elif [ $1 -gt 60 ]; then
        echo $fm
    else
        echo $fb
    fi
}

volume() {
    if [ -n "$(amixer get Master | grep off)" ]; then
       echo Mute
    else
       echo $(amixer get Master | tail -1 | cut -d ' ' -f6 | tr -d '[%]')
    fi
}

volume_color() {
    if [ "Mute" = $1 ]; then echo $fr; else echo $fw; fi
}

battery() {
    battery=$(cat /sys/class/power_supply/BAT0/capacity)
    battery_text=$battery

    if [ -z $battery ]; then
        battery=-1
        battery_text=-
    fi
    echo $battery_text
}

battery_status() {
    echo $(cat /sys/class/power_supply/BAT0/status)
}

battery_color() {
    if [ $1 -gt 75 ]; then
        echo $fb
    elif [ $1 -gt 50 ]; then
        echo $fm
    elif [ $1 -gt 25 ]; then
        echo $fr
    elif [ $1 -gt 10 ]; then
        echo $fr
    elif [ $1 -gt -1 ]; then
        if [ "$2" = "Discharging" ]; then
            echo $fr$blink
        else
            echo $fr
        fi
    else
        echo $fw
    fi
}

cmus() {
    info=$(cmus-remote -Q | grep tag)
    title=$(echo -e "$info" | grep 'tag title' | cut -d ' ' -f3-)
    artist=$(echo -e "$info" | grep 'tag artist' | cut -d ' ' -f3-)
    echo "$artist $fw$title$c"
}

system_loop() {
    while true; do
        bspc desktop -f
        sleep 1
    done
}

panel_bar() {
    while read -r line ; do
        wm_name=$(bspc query -D -d focused)
        wm_icon=$(echo $workspaces | cut -d, -f$wm_name)
        node_id=$(bspc query -N -n focused)
        if [ -n "$node_id" ]; then
            title=$(xprop -id $node_id WM_NAME | cut -d \" -f2)
        else
            title=""
        fi
        t=$(temp)
        v=$(volume)
        b=$(battery)
        bs=$(battery_status)
        dm=$(date +%b)
        dd=$(date +%e)
        dw=$(date +%a)
        dt=$(date +%R)
        bgc=""
        case "$status_color" in
            *$blink*) bgc=$(tput setab 5) ;;
        esac
        tc=$(temp_color $t)$bgc
        vc=$(volume_color $v)$bgc
        bc=$(battery_color $b $bs)$bgc
        td=$fw$bgc
        cc=$c$bgc

        msg_color="$(tput clear)$(tput civis)$bgc$bgc$wm_icon $title"
        msg_clean="$wm_icon $title"
        status_color=" T $tc$t$cc V $vc$v$cc B $bc$b$cc $dm $fw$dd$cc $dw $fw$dt$cc"
        status_clean=" T $t V $v B $b $dm $dd $dw $dt"

        cols=$(($(tput cols)-${#msg_clean}-${#status_clean}+${#status_color}))
        printf "%s%${cols}s" "$msg_color" "$status_color"
    done
}

system_loop &
bspc subscribe desktop | panel_bar &
wait
